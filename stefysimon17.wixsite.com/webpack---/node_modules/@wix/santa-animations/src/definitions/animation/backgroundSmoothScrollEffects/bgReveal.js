'use strict'
const {
    getTravelMap,
    TRAVEL_TYPES
} = require('../../../utils/definitionsUtils')
const name = 'BgReveal'
const properties = {
    hideOnStart: false,
    requestFullScreenHeight: true,
    getMediaDimensions(width, height, screenHeight) {
        return {
            width,
            height: Math.max(height, screenHeight)
        }
    },
    groups: ['animation', 'background'],
    schema: {
        duration: {
            type: 'number',
            min: 0,
            default: 0
        },
        delay: {
            type: 'number',
            min: 0,
            default: 0
        },
        speedFactor: {
            type: 'number',
            default: 1
        },
        viewPortHeight: {
            type: 'number',
            min: 0
        },
        componentHeight: {
            type: 'number',
            min: 0
        }
    }
}

function register({
    factory
}) {
    /**
     * @param {HTMLElement|HTMLElement[]} elements DOM elements to animate
     * @param {Number} [duration]
     * @param {Number} [delay]
     * @param {Object} [params] Timeline optional parameters.
     * @returns {TimelineMax}
     */
    function animation(elements, duration, delay, {
        componentHeight,
        componentTop,
        siteHeight,
        viewPortHeight,
        speedFactor = properties.schema.speedFactor.default, // TODO: when bgScrub is removed, we can remove this, factor becomes a constant 1
        ...params
    } = {}) {
        const sequence = factory.sequence(params)
        const {
            TOP_TO_BOTTOM,
            BOTTOM_TO_TOP
        } = getTravelMap(componentHeight, componentTop, siteHeight, viewPortHeight, TRAVEL_TYPES.normal)

        sequence.add(factory.animate('BaseBgParallaxY', elements, duration, delay, {
            viewPortHeight,
            componentHeight,
            speedFactor,
            start: TOP_TO_BOTTOM,
            end: BOTTOM_TO_TOP,
            ease: 'none'
        }))

        return sequence.get()
    }

    factory.registerAnimation(name, animation, properties)
}

module.exports = {
    name,
    properties,
    register
}