function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}

function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}

function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}

import biEvents from './bi/events';

function wixIframeWrapper(WixElement, services) {
    var WixIframe = /*#__PURE__*/ function(_WixElement) {
        _inheritsLoose(WixIframe, _WixElement);

        function WixIframe() {
            // eslint-disable-line no-useless-constructor
            return _WixElement.call(this) || this;
        }

        var _proto = WixIframe.prototype;

        _proto.reportIframeStartLoading = function reportIframeStartLoading(iframe) {
            var _this$dataset = this.dataset,
                isTpa = _this$dataset.isTpa,
                widgetId = _this$dataset.widgetId,
                appDefinitionId = _this$dataset.appDefinitionId;

            if (services && services.biService && isTpa === 'true') {
                services.biService.reportTpaBiEvent({
                    reportDef: biEvents.APP_IFRAME_START_LOADING,
                    params: {},
                    compId: iframe.getAttribute('name'),
                    isWixTPA: true,
                    widgetId: widgetId,
                    appDefinitionId: appDefinitionId
                });
            }
        };

        _proto.reLayout = function reLayout() {
            //TODO - add lazy loading if bv_lazyTPAs experiment is merged
            //TODO - handle instance templating from clientSpecMap once we implement static html loading
            var iframe = this.querySelector('iframe');

            if (iframe) {
                var dataSrc = iframe.dataset.src;

                if (dataSrc && iframe.src !== dataSrc) {
                    iframe.src = dataSrc;
                    iframe.dataset.src = '';
                    this.dataset.src = '';
                    this.reportIframeStartLoading(iframe);
                }
            }
        };

        _proto.attributeChangedCallback = function attributeChangedCallback(name, oldValue, newValue) {
            if (newValue) {
                this.reLayout();
            }
        };

        _createClass(WixIframe, null, [{
            key: "observedAttributes",
            get: function get() {
                return ['data-src'];
            }
        }]);

        return WixIframe;
    }(WixElement);

    return WixIframe;
}

export default wixIframeWrapper;
//# sourceMappingURL=wixIframe.js.map